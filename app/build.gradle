apply plugin: 'com.android.application'

//apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'  //for greenDao
//apply plugin: 'io.objectbox' // after applying Android plugin

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.zenglb.framework"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        //支持VectorDrawable
        vectorDrawables.useSupportLibrary = true

        //配置使用ARouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }


//        ndk {
//            //设置支持的SO库架构
//            abiFilters 'armeabi'      //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
//        }

    }


    buildTypes {
        release {
//            zipAlignEnabled true  // Zipalign优化
//            shrinkResources true  // 移除无用的resource文件,必须和minifyEnabled 一起使用
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            debuggable false
//            signingConfig signingConfigs.MyConfig
            manifestPlaceholders = [IS_DEBUG          : "no", APP_ICON: "@mipmap/ic_launcher", APP_NAME: "FrameWork",
                                    RONG_CLOUD_APP_KEY: "6tnym1br6jw07"]
        }

        debug {
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            manifestPlaceholders = [IS_DEBUG          : "yes", APP_ICON: "@mipmap/ic_launcher", APP_NAME: "FrameWork",
                                    RONG_CLOUD_APP_KEY: "c9kqb3rdcvn1j"]
        }

    }




    sourceSets {
        main {
            if (isModule.toBoolean()) {
                java {
                    exclude 'com/zenglb/framework/**'
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibility
        targetCompatibility rootProject.ext.targetCompatibility
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    implementation project(':baselib')

    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"  //需要吗？
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    if (!isModule.toBoolean()) {
        implementation project(':module_a')
        implementation project(':module_jsbridge')
        implementation project(':module_ai')
    }

}
